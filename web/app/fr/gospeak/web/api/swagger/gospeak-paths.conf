"/cfps" {
  get {
    tags: ["CFP"]
    summary: "paginated list of published CFPs"
    parameters: [
      {name: "page", in: "query", schema {"$ref": "#/components/schemas/PageNo"}}
      {name: "page-size", in: "query", schema {"$ref": "#/components/schemas/PageSize"}}
      {name: "sort", in: "query", schema {"$ref": "#/components/schemas/PageSort"}}
      {name: "q", in: "query", schema {"$ref": "#/components/schemas/PageSearch"}}
    ]
    responses {
      200 {content {application/json {schema {allOf: [{"$ref": "#/components/schemas/ResponsePage"}, {type: object, properties {data {type: array, items {"$ref": "#/components/schemas/CfpPublic"}}}}]}}}}
    }
  }
}
"/cfps/{cfp-slug}" {
  get {
    tags: ["CFP"]
    summary: "details for a CFP"
    parameters: [
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
    ]
    responses {
      200 {content {application/json {schema {allOf: [{"$ref": "#/components/schemas/ResponseItem"}, {type: object, properties {data: {"$ref": "#/components/schemas/CfpPublic"}}}]}}}}
      404 {content {application/json {schema {"$ref": "#/components/schemas/ResponseError"}}}}
    }
  }
}
"/speakers" {
  get {
    tags: ["Speaker"]
    summary: "paginated list of speakers"
    parameters: [
      {name: "page", in: "query", schema {"$ref": "#/components/schemas/PageNo"}}
      {name: "page-size", in: "query", schema {"$ref": "#/components/schemas/PageSize"}}
      {name: "sort", in: "query", schema {"$ref": "#/components/schemas/PageSort"}}
      {name: "q", in: "query", schema {"$ref": "#/components/schemas/PageSearch"}}
    ]
    responses {
      200 {content {application/json {schema {allOf: [{"$ref": "#/components/schemas/ResponsePage"}, {type: object, properties {data {type: array, items {"$ref": "#/components/schemas/UserPublic"}}}}]}}}}
    }
  }
}
"/speakers/{user-slug}" {
  get {
    tags: ["Speaker"]
    summary: "details for a speaker"
    parameters: [
      {name: "user-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/UserSlug"}}
    ]
    responses {
      200 {content {application/json {schema {allOf: [{"$ref": "#/components/schemas/ResponseItem"}, {type: object, properties {data: {"$ref": "#/components/schemas/UserPublic"}}}]}}}}
      404 {content {application/json {schema {"$ref": "#/components/schemas/ResponseError"}}}}
    }
  }
}
